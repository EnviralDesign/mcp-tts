name: Build and Publish to PyPI

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      should-publish: ${{ steps.check-pypi.outputs.should-publish }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version from pyproject.toml
        id: get-version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"
      
      - name: Check if version exists on PyPI
        id: check-pypi
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://pypi.org/pypi/mcp-tts/$VERSION/json/")
          if [ "$HTTP_CODE" = "404" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION not found on PyPI - will publish"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION already exists on PyPI - skipping publish"
          fi

  test:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.should-publish == 'true'
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
        
      - name: Install system audio dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev libasound2-dev
        
      - name: Install dependencies
        run: uv sync --all-extras
        
      - name: Run linting
        run: |
          uv run ruff check .
          uv run black --check .
          
      - name: Run tests
        run: |
          # Run any existing tests
          if [ -f "tests/test_*.py" ]; then
            uv run pytest tests/ -v
          else
            echo "No tests found, running basic import test"
            uv run python -c "
            import sys
            sys.path.insert(0, 'src')
            from config import Config
            from mcp_server import main
            print('‚úÖ Basic imports successful')
            "
          fi

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    if: needs.check-version.outputs.should-publish == 'true'
    environment: pypi  # Requires setting up a GitHub environment
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          
      - name: Build package
        run: uv build
        
      - name: Check package contents
        run: |
          echo "üì¶ Built packages:"
          ls -la dist/
          echo ""
          echo "üîç Package contents:"
          uv run python -m zipfile -l dist/*.whl | head -20
        
      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "üöÄ Publishing version ${{ needs.check-version.outputs.version }} to PyPI..."
          uv publish
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          release_name: v${{ needs.check-version.outputs.version }}
          body: |
            üéâ **mcp-tts v${{ needs.check-version.outputs.version }}**
            
            This release has been automatically published to PyPI.
            
            **Install/Update:**
            ```bash
            uvx --from mcp-tts mcp-tts-server-stdio
            ```
            
            **Changes in this release:**
            - Check the commit history for detailed changes since the last release
            
            **Full Changelog:** [Compare changes](https://github.com/EnviralDesign/mcp-tts/compare/v${{ needs.check-version.outputs.version }}...main)
          draft: false
          prerelease: false

  notify-success:
    runs-on: ubuntu-latest
    needs: [check-version, build-and-publish]
    if: needs.check-version.outputs.should-publish == 'true' && success()
    
    steps:
      - name: Success notification
        run: |
          echo "üéâ Successfully published mcp-tts v${{ needs.check-version.outputs.version }} to PyPI!"
          echo "üì¶ Package URL: https://pypi.org/project/mcp-tts/${{ needs.check-version.outputs.version }}/"
          echo "üöÄ Users can now install with: uvx --from mcp-tts mcp-tts-server-stdio" 